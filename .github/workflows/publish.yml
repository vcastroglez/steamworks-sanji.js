name: Publish

on:
    push:
        branches: [main]
    pull_request:

env:
    DEBUG: 'napi:*'
    MACOSX_DEPLOYMENT_TARGET: '10.13'

jobs:
    build:
        runs-on: ubuntu-latest

        steps:
            - uses: actions/checkout@v3

            - name: Setup Node
              uses: actions/setup-node@v3
              with:
                  node-version: 18.x

            - name: Setup Rust
              uses: dtolnay/rust-toolchain@stable
              with:
                  toolchain: stable
                  targets: x86_64-pc-windows-msvc, x86_64-unknown-linux-gnu, x86_64-apple-darwin, aarch64-apple-darwin

            - uses: Swatinem/rust-cache@v2

            - name: Install ziglang
              uses: goto-bus-stop/setup-zig@v2

            - run: cargo install cargo-xwin

            - name: Check formatting
              run: cargo fmt --all --check

            - name: Clippy
              run: cargo clippy

            - name: Node install
              run: npm ci

            - name: Build Mac x64
              run: npm run build -- --zig --target x86_64-apple-darwin

            - name: Build Mac arm64
              run: npm run build -- --zig --target aarch64-apple-darwin

            - name: Build Linux
              run: npm run build -- --target x86_64-unknown-linux-gnu

            - name: Build Windows
              run: npm run build -- --target x86_64-pc-windows-msvc

            - name: Upload artifact
              uses: actions/upload-artifact@v3
              with:
                  name: OS specific binaries
                  path: dist
                  if-no-files-found: error

    deploy:
        # prevents this action from running on forks or pull requests
        if: ${{ github.repository == 'ceifa/steamworks.js' && github.event_name == 'push' }}

        runs-on: ubuntu-latest
        needs: build

        steps:
            - uses: actions/checkout@v3

            - name: Download build
              uses: actions/download-artifact@v3
              with:
                  name: OS specific binaries
                  path: dist/

            - name: Log files
              run: |
                  echo "- Root directory:" && ls
                  echo "- Dist directory:" && ls -R dist

            - name: Publish to npm
              uses: JS-DevTools/npm-publish@v1
              with:
                  token: ${{ secrets.NPM_TOKEN }}
